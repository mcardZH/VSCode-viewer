export * as molstar from 'molstar';
import { PluginUIContext } from 'molstar/lib/mol-plugin-ui/context';
import { PluginUISpec } from 'molstar/lib/mol-plugin-ui/spec';
import { PluginState } from 'molstar/lib/mol-plugin/state';
import { BuiltInTrajectoryFormat } from 'molstar/lib/mol-plugin-state/formats/trajectory';
export { MolstarViewer, type MolstarViewerProps } from './components/MolstarViewer';
export declare function getParam(name: string, regex: string): string;
export interface ViewerConfig {
    debugMode?: boolean;
    hideControls?: boolean;
    collapseLeftPanel?: boolean;
    pdbProvider?: string;
    emdbProvider?: string;
    mapProvider?: string;
    pixelScale?: number;
    pickScale?: number;
    pickPadding?: number;
    disableWboit?: boolean;
    preferWebgl1?: boolean;
    snapshotId?: string;
    snapshotUrl?: string;
    snapshotUrlType?: PluginState.SnapshotType;
    structureUrl?: string;
    structureUrlFormat?: BuiltInTrajectoryFormat;
    structureUrlIsBinary?: boolean;
    pdb?: string;
    pdbDev?: string;
    emdb?: string;
    modelArchive?: string;
}
export declare function parseUrlConfig(): ViewerConfig;
export interface CreateViewerOptions {
    elementId: string;
    spec?: PluginUISpec;
    layoutShowControls?: boolean;
    viewportShowExpand?: boolean;
    collapseLeftPanel?: boolean;
    pdbProvider?: string;
    emdbProvider?: string;
    volumeStreamingServer?: string;
    pixelScale?: number;
    pickScale?: number;
    pickPadding?: number;
    enableWboit?: boolean;
    preferWebgl1?: boolean;
    debugMode?: boolean;
    snapshotId?: string;
    snapshotUrl?: string;
    snapshotUrlType?: PluginState.SnapshotType;
    structureUrl?: string;
    structureUrlFormat?: BuiltInTrajectoryFormat;
    structureUrlIsBinary?: boolean;
    pdb?: string;
    pdbDev?: string;
    emdb?: string;
    modelArchive?: string;
    loadCommand?: string;
    onBeforeUIRender?: (ctx: PluginUIContext) => (Promise<void> | void);
}
export declare function createViewer(options: CreateViewerOptions): Promise<PluginUIContext>;
